#!/usr/bin/env groovy

pipeline {
    
    agent any

    environment {
        GITHUB_REPO = "git@github.com:YuriyPelykh/NPTT.git"
        GITHUB_CREDENTIAL_ID = "Jenkins_GitHub_Key"
        DOCKERHUB_CREDENTIALS_ID = credentials('DockerHub_Creds')
        DOCKERHUB_REPO = "yuriypelykh"
        DOCKER_IMAGE_NAME = "ypwp-php-fpm"
    }
    
    stages {
        stage('Pull code from SCM') {
            steps {
                git branch: 'master',
                    credentialsId: "${GITHUB_CREDENTIAL_ID}",
                    url: "${GITHUB_REPO}"
                sh "ls -lah"
            }
        }

        stage('Dockerfiles lint') {
            agent {
                docker {
                    image 'hadolint/hadolint:latest-debian'
                    args '-v ${WORKSPACE}/:/mnt/'
                }
            }
            steps {
                sh 'hadolint /mnt/Dockerfile'
            }
        }

        stage('Containerize App') {
            steps {
                sh 'docker build -t ${DOCKERHUB_REPO}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER} -t yuriypelykh/ypwp-php-fpm:latest .'
            }
        }

        stage('Push image to registry') {
            steps {
                sh "echo \"${DOCKERHUB_CREDENTIALS_ID_PSW}\" | docker login -u \"${DOCKERHUB_CREDENTIALS_ID_USR}\" --password-stdin; \
                    docker push \"${DOCKERHUB_REPO}\"/\"${DOCKER_IMAGE_NAME}\":\"${BUILD_NUMBER}\"; \
                    docker push \"${DOCKERHUB_REPO}\"/\"${DOCKER_IMAGE_NAME}\":latest"
            }
        }

        stage('Trigger Deploy job') {
            steps {
                build 'CD-Pipeline'
            }
        }
    }
}
